DISPLAY_NAME=OpenHeroes3
NAME=HEROES3
KEY=OPEN_HEROES_3

FILE=[
	UI,
	ENTITY\MAP_OBJECT,
	ENTITY\MAP_OBJECT\HERO,
	ENTITY\MAP_OBJECT\UNIT,
	ENTITY\MAP_OBJECT\TOWN,
	ENTITY\MAP_OBJECT\MAP_INTERACTABLE,
	ENTITY\MAP_OBJECT\MAP_OBSTACLE,
	ENTITY\MAP_OBJECT\BATTLE_FIELD_OBSTACLE,
	ENTITY\TERRAIN,
	ENTITY\RIVER,
	ENTITY\ROAD,
]

#########



# SYSTEM-WIDE LABELS
SYSTEM_LABELS:[DISABLE_IN_EDITOR]

	
VALUE_COST_TYPE_LIST=[HP_COST,MP_COST,MOVEMENT_COST,RESOURCE_COST]
VALUE_MODIFIER_TYPE_LIST=[RANGED_TO_MELEE_MODIFIER,RANGED_IN_SIEGE_MODIFIER,
	MORALE_MODIFIER,LUCK_MODIFIER,IMMUNE_TO_MAGIC_PROBABILITY_MODIFIER,
	MP_COST_MODIFIER,MAGIC_DAMAGE_REDUCTION_MODIFIER]
	
# DERIVED LABELS
ATTACK_TYPE:[MELEE,RANGED]
MOVEMENT_TYPE:[NORMAL,FLY,TELEPORT]
BATTLE_FIELD_SHAPE_TYPE:[SIZE1,SIZE2]

# OTHER CUSTOM LABELS
CUSTOM_LABEL_LIST=[
	NOT_PLACED_ON_WATER,
	GOOD_ALIGN,EVIL_ALIGN,NEUTRAL_ALIGN,
	FIRE_SPELL,WATER_SPELL,WIND_SPELL,EARTH_SPELL,MIND_SPELL,
	GROWING, CAST_COUNT,
	IMMUNE_TO_JOUSTING,MULTI_ATTACK,MULTI_RETALIATION,
	FLYING,NO_MELEE_PENALTY,NO_SIEGE_PENALTY,JOUSTING,HATRED,CAN_CAST_MAGIC,
	IMMUNE_TO_MAGIC,IMMUNE_TO_MAGIC_AURA,
	MULTI_CELL_ATTACK,NONLIVING,MAGIC_DAMAGE_REDUCTION,NO_RANGE_PENALTY,
	FRIENDLY_FIRE,UNDEAD,ELEMENTAL,MACHINE,
]

GAME(BOOTSTRAP_ARGUMENTS)={
	GAME_MODE=ROUND_BASED,
	MAX_PLAYER_COUNT=8,
	MAX_AI_PLAYER_COUNT=8,
	MAP_MODE=MULTI_MAP,
	MAP_SHAPE=RECTANGLE,
}

GAME_PHRASE:[
	BEFORE_GAME_START,
	GAME_MAIN,
	NEW_GAME_SCREEN,
	NEW_GAME_CONFIG_SCREEN,
	IN_GAME_LOADING_SCREEN,
	USER_ROUND,
	BATTLE_ROUND,
	ENEMY_ROUND,
	TOWN_SCREEN,
	WORLD_MAP_SCREEN,
]

GAME_STATE:[
	NOTHING_SELECTED,
	HERO_SELECTED,
	HERO_DESTINATION_SELECTED,
	HERO_MOVING,
	HERO_ONBOARDING,
	HERO_OFFBOARDING,
	AWAITING_DIALOG_DECISION,
]

Scheduler={
	Type<SchedulerType>=,
	Phrase<BattlePhrase>=,
	BeforeStart<Function,List>=,
	AfterAction<Function,List>=,
	AvailableActions<List<UserAction>>=,
}

Scheduler:[RoundBasedBattleScheduler]
SchedulerType:[RoundBased,TickBased]
BattlePhrase:[Tactical,Battle]
UserAction:[BattleAction]
BattleAction:[ShowOptions,TacticalSkip,TacticalPhraseEnd,Surrender,Retreat,CastMagic,UnitMove,UnitWait,UnitDefend,UnitCastMagic]
RoundBasedBattleScheduler={
	Type=RoundBased,
	Phrase=,
	AvailableActions=[],
	BeforeStart={
		Function=FuncInitialize
	},
	SequenceFunction={
		Function=FuncDetermineBattleSequence,
		FUNCTION_PARAMETERS=[],
	},
	OnActionHandler=,
	PHRASES=[
		TACTICAL={
			ACTIONS={
				MOVE_UNIT,
				CONFIRM_TACTIC,
			}
		},
		BATTLE,
	]
	ACTIONS={
		
		CAST_SPELL=,
		MOVE_UNIT=,
		
	}
}
FuncInitialize=DefFunc([*Scheduler<Scheduler>,Attacker<Hero>,Defender<Hero>],
	[
		Var(AttackerSkill, Attacker.SecondarySkills.Get(SkillTactics)),
		Var(DefenderSkill, Defender.SecondarySkills.Get(SkillTactics)),
		Var(FinalSkillLevel, AttackerSkill.Level-DefenderSkill.Level),
		Then(AvailableAction.Add([ShowOptions,TacticalSkip,TacticalPhraseEnd,UnitMove]),
	]
)
FuncDetermineBattleSequence=DefFunc([Attacker<Hero>,Defender<Hero>,ArenaType<ArenaType>],
	[],
)

Enumerate=DefFunc([



